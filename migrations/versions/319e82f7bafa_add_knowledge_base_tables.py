"""Add knowledge base tables

Revision ID: 319e82f7bafa
Revises: a938926ff033
Create Date: 2025-08-21 11:23:40.475914

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '319e82f7bafa'
down_revision = 'a938926ff033'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('kb_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='文件/文件夹名称'),
    sa.Column('item_type', sa.Enum('FOLDER', 'MARKDOWN', 'MINDMAP', 'FILE', name='kbitemtypeenum'), nullable=False, comment='条目类型'),
    sa.Column('namespace', sa.Enum('PUBLIC', 'PERSONAL', name='kbnamespaceenum'), nullable=False, comment='命名空间'),
    sa.Column('parent_id', sa.Integer(), nullable=True, comment='父文件夹ID'),
    sa.Column('owner_id', sa.Integer(), nullable=False, comment='所有者ID'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('project_file_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_kb_items_owner_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_id'], ['kb_items.id'], name=op.f('fk_kb_items_parent_id_kb_items')),
    sa.ForeignKeyConstraint(['project_file_id'], ['project_files.id'], name=op.f('fk_kb_items_project_file_id_project_files')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kb_items'))
    )
    with op.batch_alter_table('kb_items', schema=None) as batch_op:
        batch_op.create_index('idx_kb_parent_owner', ['parent_id', 'owner_id'], unique=False)

    op.create_table('kb_markdown_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kb_item_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['kb_item_id'], ['kb_items.id'], name=op.f('fk_kb_markdown_documents_kb_item_id_kb_items'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kb_markdown_documents')),
    sa.UniqueConstraint('kb_item_id', name=op.f('uq_kb_markdown_documents_kb_item_id'))
    )
    op.create_table('kb_mindmaps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kb_item_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True, comment='思维导图的JSON数据'),
    sa.ForeignKeyConstraint(['kb_item_id'], ['kb_items.id'], name=op.f('fk_kb_mindmaps_kb_item_id_kb_items'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kb_mindmaps')),
    sa.UniqueConstraint('kb_item_id', name=op.f('uq_kb_mindmaps_kb_item_id'))
    )
    op.create_table('kb_mindmap_node_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mindmap_id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.String(length=100), nullable=False, comment='思维导图中的节点ID'),
    sa.Column('linked_kb_item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['linked_kb_item_id'], ['kb_items.id'], name=op.f('fk_kb_mindmap_node_links_linked_kb_item_id_kb_items'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['mindmap_id'], ['kb_mindmaps.id'], name=op.f('fk_kb_mindmap_node_links_mindmap_id_kb_mindmaps'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kb_mindmap_node_links')),
    sa.UniqueConstraint('mindmap_id', 'node_id', name='_mindmap_node_uc')
    )
    with op.batch_alter_table('kb_mindmap_node_links', schema=None) as batch_op:
        batch_op.create_index('idx_mindmap_node_link', ['mindmap_id', 'node_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('kb_mindmap_node_links', schema=None) as batch_op:
        batch_op.drop_index('idx_mindmap_node_link')

    op.drop_table('kb_mindmap_node_links')
    op.drop_table('kb_mindmaps')
    op.drop_table('kb_markdown_documents')
    with op.batch_alter_table('kb_items', schema=None) as batch_op:
        batch_op.drop_index('idx_kb_parent_owner')

    op.drop_table('kb_items')
    # ### end Alembic commands ###
