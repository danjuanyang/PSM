"""Add email system tables

Revision ID: a938926ff033
Revises: b8bcee4198c8
Create Date: 2025-08-14 17:08:28.628844

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a938926ff033'
down_revision = 'b8bcee4198c8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='配置名称'),
    sa.Column('smtp_host', sa.String(length=255), nullable=False, comment='SMTP服务器地址'),
    sa.Column('smtp_port', sa.Integer(), nullable=True, comment='SMTP端口'),
    sa.Column('smtp_use_tls', sa.Boolean(), nullable=True, comment='是否使用TLS'),
    sa.Column('smtp_use_ssl', sa.Boolean(), nullable=True, comment='是否使用SSL'),
    sa.Column('sender_email', sa.String(length=255), nullable=False, comment='发件人邮箱'),
    sa.Column('sender_name', sa.String(length=100), nullable=True, comment='发件人名称'),
    sa.Column('username', sa.String(length=255), nullable=False, comment='认证用户名'),
    sa.Column('password', sa.String(length=255), nullable=False, comment='认证密码(加密存储)'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('is_default', sa.Boolean(), nullable=True, comment='是否为默认配置'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_configs'))
    )
    op.create_table('email_recipient_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='组名称'),
    sa.Column('description', sa.String(length=255), nullable=True, comment='组描述'),
    sa.Column('recipient_roles', sa.JSON(), nullable=True, comment="接收角色列表，如['LEADER', 'MEMBER']"),
    sa.Column('recipient_user_ids', sa.JSON(), nullable=True, comment='具体用户ID列表'),
    sa.Column('recipient_emails', sa.JSON(), nullable=True, comment='外部邮箱列表'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_recipient_groups')),
    sa.UniqueConstraint('name', name=op.f('uq_email_recipient_groups_name'))
    )
    op.create_table('email_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='模板名称'),
    sa.Column('template_type', sa.Enum('WEEKLY_REPORT', 'MONTHLY_REPORT', 'CLOCK_IN_SUMMARY', 'PROJECT_DEADLINE', 'CUSTOM', name='emailtemplatetypeenum'), nullable=False, comment='模板类型'),
    sa.Column('subject', sa.String(length=255), nullable=False, comment='邮件主题(支持变量)'),
    sa.Column('body_html', sa.Text(), nullable=True, comment='HTML格式邮件内容'),
    sa.Column('body_text', sa.Text(), nullable=True, comment='纯文本格式邮件内容'),
    sa.Column('variables', sa.JSON(), nullable=True, comment='可用变量列表及说明'),
    sa.Column('description', sa.String(length=500), nullable=True, comment='模板描述'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_email_templates_created_by_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_templates'))
    )
    op.create_table('email_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='任务名称'),
    sa.Column('description', sa.String(length=500), nullable=True, comment='任务描述'),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('email_config_id', sa.Integer(), nullable=True),
    sa.Column('recipient_group_id', sa.Integer(), nullable=True),
    sa.Column('frequency', sa.Enum('ONCE', 'DAILY', 'WEEKLY', 'MONTHLY', name='emailtaskfrequencyenum'), nullable=False, comment='执行频率'),
    sa.Column('cron_expression', sa.String(length=100), nullable=True, comment='Cron表达式(高级调度)'),
    sa.Column('send_time', sa.Time(), nullable=True, comment='发送时间'),
    sa.Column('send_day_of_week', sa.Integer(), nullable=True, comment='每周几发送(0-6, 0=周一)'),
    sa.Column('send_day_of_month', sa.Integer(), nullable=True, comment='每月几号发送(1-31)'),
    sa.Column('data_query_config', sa.JSON(), nullable=True, comment='数据查询配置'),
    sa.Column('additional_recipients', sa.JSON(), nullable=True, comment='额外收件人列表'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否启用'),
    sa.Column('last_run_at', sa.DateTime(), nullable=True, comment='上次执行时间'),
    sa.Column('next_run_at', sa.DateTime(), nullable=True, comment='下次执行时间'),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_email_tasks_created_by_users'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['email_config_id'], ['email_configs.id'], name=op.f('fk_email_tasks_email_config_id_email_configs'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['recipient_group_id'], ['email_recipient_groups.id'], name=op.f('fk_email_tasks_recipient_group_id_email_recipient_groups'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['template_id'], ['email_templates.id'], name=op.f('fk_email_tasks_template_id_email_templates'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_tasks'))
    )
    with op.batch_alter_table('email_tasks', schema=None) as batch_op:
        batch_op.create_index('idx_email_tasks_next_run_at', ['next_run_at'], unique=False)

    op.create_table('email_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('email_config_id', sa.Integer(), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=False, comment='邮件主题'),
    sa.Column('body', sa.Text(), nullable=True, comment='邮件内容'),
    sa.Column('recipients', sa.JSON(), nullable=False, comment='收件人列表'),
    sa.Column('cc_recipients', sa.JSON(), nullable=True, comment='抄送列表'),
    sa.Column('bcc_recipients', sa.JSON(), nullable=True, comment='密送列表'),
    sa.Column('status', sa.Enum('PENDING', 'SENDING', 'SUCCESS', 'FAILED', 'CANCELLED', name='emailstatusenum'), nullable=True, comment='发送状态'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='错误信息'),
    sa.Column('retry_count', sa.Integer(), nullable=True, comment='重试次数'),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True, comment='计划发送时间'),
    sa.Column('sent_at', sa.DateTime(), nullable=True, comment='实际发送时间'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['email_config_id'], ['email_configs.id'], name=op.f('fk_email_logs_email_config_id_email_configs'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['task_id'], ['email_tasks.id'], name=op.f('fk_email_logs_task_id_email_tasks'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_logs'))
    )
    with op.batch_alter_table('email_logs', schema=None) as batch_op:
        batch_op.create_index('idx_email_logs_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_email_logs_status', ['status'], unique=False)
        batch_op.create_index('idx_email_logs_task_id', ['task_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('email_logs', schema=None) as batch_op:
        batch_op.drop_index('idx_email_logs_task_id')
        batch_op.drop_index('idx_email_logs_status')
        batch_op.drop_index('idx_email_logs_created_at')

    op.drop_table('email_logs')
    with op.batch_alter_table('email_tasks', schema=None) as batch_op:
        batch_op.drop_index('idx_email_tasks_next_run_at')

    op.drop_table('email_tasks')
    op.drop_table('email_templates')
    op.drop_table('email_recipient_groups')
    op.drop_table('email_configs')
    # ### end Alembic commands ###
