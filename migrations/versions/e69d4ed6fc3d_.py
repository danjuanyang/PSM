"""empty message

Revision ID: e69d4ed6fc3d
Revises: 
Create Date: 2025-07-23 13:18:31.342269

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e69d4ed6fc3d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_tags')),
    sa.UniqueConstraint('name', name=op.f('uq_ai_tags_name'))
    )
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment="权限的唯一标识符, e.g., 'edit_project'"),
    sa.Column('description', sa.String(length=255), nullable=True, comment='权限描述'),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permissions')),
    sa.UniqueConstraint('name', name=op.f('uq_permissions_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('role', sa.Enum('SUPER', 'ADMIN', 'LEADER', 'MEMBER', name='roleenum'), nullable=False),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('team_leader_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['team_leader_id'], ['users.id'], name=op.f('fk_users_team_leader_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('ai_api',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ai_model', sa.String(length=50), nullable=True),
    sa.Column('api_key', sa.String(length=255), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_ai_api_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_api'))
    )
    op.create_table('ai_conversations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_ai_conversations_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_conversations'))
    )
    with op.batch_alter_table('ai_conversations', schema=None) as batch_op:
        batch_op.create_index('idx_ai_conversations_updated_at', ['updated_at'], unique=False)
        batch_op.create_index('idx_ai_conversations_user_id', ['user_id'], unique=False)

    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=512), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('related_key', sa.String(length=100), nullable=False),
    sa.Column('related_url', sa.String(length=255), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_alerts_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_alerts')),
    sa.UniqueConstraint('related_key', name=op.f('uq_alerts_related_key'))
    )
    with op.batch_alter_table('alerts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_alerts_is_read'), ['is_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_alerts_user_id'), ['user_id'], unique=False)

    op.create_table('announcements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True, comment='0=普通, 1=重要, 2=紧急'),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_announcements_created_by_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_announcements'))
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('PAUSED', 'PENDING', 'IN_PROGRESS', 'COMPLETED', name='statusenum'), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], name=op.f('fk_projects_employee_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projects'))
    )
    op.create_table('report_clockins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('report_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], name=op.f('fk_report_clockins_employee_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_report_clockins'))
    )
    op.create_table('role_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('SUPER', 'ADMIN', 'LEADER', 'MEMBER', name='roleenum'), nullable=False, comment='角色枚举'),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('is_allowed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('fk_role_permissions_permission_id_permissions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role_permissions'))
    )
    op.create_table('trainings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trainer_id', sa.Integer(), nullable=False),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.Column('training_month', sa.String(length=7), nullable=False, comment="格式: 'YYYY-MM'"),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('material_path', sa.String(length=255), nullable=True),
    sa.Column('upload_time', sa.DateTime(), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], name=op.f('fk_trainings_assignee_id_users')),
    sa.ForeignKeyConstraint(['trainer_id'], ['users.id'], name=op.f('fk_trainings_trainer_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_trainings'))
    )
    op.create_table('user_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('is_allowed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('fk_user_permissions_permission_id_permissions'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_permissions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_permissions')),
    sa.UniqueConstraint('user_id', 'permission_id', name='_user_permission_uc')
    )
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('login_time', sa.DateTime(), nullable=True),
    sa.Column('logout_time', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_activity_time', sa.DateTime(), nullable=True),
    sa.Column('session_duration', sa.Integer(), nullable=True, comment='in seconds'),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_sessions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_sessions'))
    )
    op.create_table('ai_conversation_tags',
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['ai_conversations.id'], name=op.f('fk_ai_conversation_tags_conversation_id_ai_conversations'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['ai_tags.id'], name=op.f('fk_ai_conversation_tags_tag_id_ai_tags'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('conversation_id', 'tag_id', name=op.f('pk_ai_conversation_tags'))
    )
    op.create_table('ai_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('role', sa.String(length=10), nullable=False, comment="'user' or 'assistant'"),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.CheckConstraint("role IN ('user', 'assistant', 'system')", name=op.f('ck_ai_messages_check_role')),
    sa.ForeignKeyConstraint(['conversation_id'], ['ai_conversations.id'], name=op.f('fk_ai_messages_conversation_id_ai_conversations'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_messages'))
    )
    with op.batch_alter_table('ai_messages', schema=None) as batch_op:
        batch_op.create_index('idx_ai_messages_conversation_id', ['conversation_id'], unique=False)

    op.create_table('announcement_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('announcement_id', sa.Integer(), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('stored_filename', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('file_type', sa.String(length=100), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['announcement_id'], ['announcements.id'], name=op.f('fk_announcement_attachments_announcement_id_announcements'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_announcement_attachments'))
    )
    op.create_table('announcement_read_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('announcement_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['announcement_id'], ['announcements.id'], name=op.f('fk_announcement_read_status_announcement_id_announcements'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_announcement_read_status_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_announcement_read_status')),
    sa.UniqueConstraint('announcement_id', 'user_id', name='_announcement_user_uc')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('training_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['training_id'], ['trainings.id'], name=op.f('fk_comments_training_id_trainings'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_comments_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comments'))
    )
    op.create_table('project_updates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_project_updates_project_id_projects'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_updates'))
    )
    op.create_table('report_clockin_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('clockin_date', sa.Date(), nullable=False),
    sa.Column('weekday', sa.String(length=20), nullable=True),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['report_clockins.id'], name=op.f('fk_report_clockin_details_report_id_report_clockins'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_report_clockin_details'))
    )
    op.create_table('subprojects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('PAUSED', 'PENDING', 'IN_PROGRESS', 'COMPLETED', name='statusenum'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_subprojects_project_id_projects'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subprojects'))
    )
    op.create_table('user_activity_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('action_detail', sa.Text(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('request_method', sa.String(length=10), nullable=True),
    sa.Column('endpoint', sa.String(length=255), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['user_sessions.id'], name=op.f('fk_user_activity_logs_session_id_user_sessions'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_activity_logs_user_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_activity_logs'))
    )
    op.create_table('ai_message_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False, comment='1 for like, -1 for dislike'),
    sa.Column('feedback_text', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('rating IN (1, -1)', name=op.f('ck_ai_message_feedback_check_rating')),
    sa.ForeignKeyConstraint(['message_id'], ['ai_messages.id'], name=op.f('fk_ai_message_feedback_message_id_ai_messages'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_message_feedback'))
    )
    with op.batch_alter_table('ai_message_feedback', schema=None) as batch_op:
        batch_op.create_index('idx_ai_message_feedback_message_id', ['message_id'], unique=False)

    op.create_table('project_stages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('subproject_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PAUSED', 'PENDING', 'IN_PROGRESS', 'COMPLETED', name='statusenum'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_project_stages_project_id_projects')),
    sa.ForeignKeyConstraint(['subproject_id'], ['subprojects.id'], name=op.f('fk_project_stages_subproject_id_subprojects'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_stages'))
    )
    op.create_table('replies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], name=op.f('fk_replies_comment_id_comments'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_id'], ['replies.id'], name=op.f('fk_replies_parent_id_replies')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_replies_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_replies'))
    )
    op.create_table('subproject_members',
    sa.Column('subproject_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subproject_id'], ['subprojects.id'], name=op.f('fk_subproject_members_subproject_id_subprojects')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_subproject_members_user_id_users')),
    sa.PrimaryKeyConstraint('subproject_id', 'user_id', name=op.f('pk_subproject_members'))
    )
    op.create_table('stage_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('PAUSED', 'PENDING', 'IN_PROGRESS', 'COMPLETED', name='statusenum'), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['stage_id'], ['project_stages.id'], name=op.f('fk_stage_tasks_stage_id_project_stages'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stage_tasks'))
    )
    op.create_table('project_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('subproject_id', sa.Integer(), nullable=True),
    sa.Column('stage_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('upload_user_id', sa.Integer(), nullable=True),
    sa.Column('original_name', sa.String(length=255), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('file_type', sa.String(length=100), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('text_extracted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_project_files_project_id_projects'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['stage_id'], ['project_stages.id'], name=op.f('fk_project_files_stage_id_project_stages'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subproject_id'], ['subprojects.id'], name=op.f('fk_project_files_subproject_id_subprojects'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['stage_tasks.id'], name=op.f('fk_project_files_task_id_stage_tasks'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['upload_user_id'], ['users.id'], name=op.f('fk_project_files_upload_user_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_files'))
    )
    op.create_table('task_progress_updates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('recorder_id', sa.Integer(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['recorder_id'], ['users.id'], name=op.f('fk_task_progress_updates_recorder_id_users'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['task_id'], ['stage_tasks.id'], name=op.f('fk_task_progress_updates_task_id_stage_tasks'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_progress_updates'))
    )
    op.create_table('file_contents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['project_files.id'], name=op.f('fk_file_contents_file_id_project_files'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_file_contents')),
    sa.UniqueConstraint('file_id', name=op.f('uq_file_contents_file_id'))
    )
    op.create_table('file_contents_fts',
    sa.Column('rowid', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('content_rowid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['content_rowid'], ['file_contents.id'], name=op.f('fk_file_contents_fts_content_rowid_file_contents')),
    sa.PrimaryKeyConstraint('rowid', name=op.f('pk_file_contents_fts'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('file_contents_fts')
    op.drop_table('file_contents')
    op.drop_table('task_progress_updates')
    op.drop_table('project_files')
    op.drop_table('stage_tasks')
    op.drop_table('subproject_members')
    op.drop_table('replies')
    op.drop_table('project_stages')
    with op.batch_alter_table('ai_message_feedback', schema=None) as batch_op:
        batch_op.drop_index('idx_ai_message_feedback_message_id')

    op.drop_table('ai_message_feedback')
    op.drop_table('user_activity_logs')
    op.drop_table('subprojects')
    op.drop_table('report_clockin_details')
    op.drop_table('project_updates')
    op.drop_table('comments')
    op.drop_table('announcement_read_status')
    op.drop_table('announcement_attachments')
    with op.batch_alter_table('ai_messages', schema=None) as batch_op:
        batch_op.drop_index('idx_ai_messages_conversation_id')

    op.drop_table('ai_messages')
    op.drop_table('ai_conversation_tags')
    op.drop_table('user_sessions')
    op.drop_table('user_permissions')
    op.drop_table('trainings')
    op.drop_table('role_permissions')
    op.drop_table('report_clockins')
    op.drop_table('projects')
    op.drop_table('announcements')
    with op.batch_alter_table('alerts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_alerts_user_id'))
        batch_op.drop_index(batch_op.f('ix_alerts_is_read'))

    op.drop_table('alerts')
    with op.batch_alter_table('ai_conversations', schema=None) as batch_op:
        batch_op.drop_index('idx_ai_conversations_user_id')
        batch_op.drop_index('idx_ai_conversations_updated_at')

    op.drop_table('ai_conversations')
    op.drop_table('ai_api')
    op.drop_table('users')
    op.drop_table('permissions')
    op.drop_table('ai_tags')
    # ### end Alembic commands ###
